namespace CounsellingServer.DataLayer
{
    public enum SqlEntity
    {
        Company, Organisation,
        TransactionAPI,
        CompanyContact,
        Product,
        CompanyStatus,
        VertexCalender,
        Country,
        Requirement,
        Agent,
        AgentProduct,
        Document,
        DocumentHistory,
        tbSystemUser,
        tbAdvertisement,
        tbExternalLink,
        tbEventLog,
        tbEventType,
        tbReportParam,
        tbSecurityDetail,
        tbSmtp,
        tbSystemUserAddress,
        tbSiteUser,
        tbSystemRoleType,
        tbSecurityProfile,
        tbControlMapping,
        tbPageMapping,
        tbRestrictedState,
        tbSiteReport,
        tbSiteRoleType,
        tbSite,
        tbState,
        tbStateTaxRate,
        tbStateZipCodeTax,
        tbTaxCategory,
        tbTaxCategoryItem,
        tbTaxCategoryDefault,
        tbSystemConfig,
        tbSiteMessage,
        tbScratch,
        tbZipCode,
        tbZipCodeTaxRate, 
        tbConnectionOwner,
        tbPageMappingDetail,
        tbDocumentType,
        tbLicence,
        tbJurisdiction,
        tbLicenceTypes,
        tbLineOfAuthority,
        tbLicenceStatus,
        tbNotificationMessages,
        tbContinueEducation,
        tbCredits,
        tbProfileSettings,
        tbFDPaymentGateway,
        EmailQueue,
        Comments,
        tbBroker,
        tbBrokerAgent,
        tbAgentBroker,
        tbCustomMessages,
        WebApiUser,
        EmailNotification,
        tbESignature,
        tbDocuSign,
        tbMailChimpIntegration,
        tbCompany,
        tbBusinessType,
        tbProduct,
        tbProductLineOfAuthority,
        tbCompanyAgent,
        tbCompanyAgentState,
        tbCompanyProduct,
        tbProductDocument,
        tbVisitedPage,
        tbAgentForm,
        tbAgentFormStateLicense,
        tbDataFeed,
        tbQuestion,
        tbSiteFeature,
        tbCompanyDocument,
        tbDocGen,
        tbDocGenData,
        tbCompanyDocuments,
        tbSiteSettings,
        tbPasswordPolicy,
        tbNIPRSettings,
        tbSystemMessage,
        tbLookupData,
        tbApplicationState,
        tbEmailStatus,
        tbEmailTemplate,
        tbImportedFiles,
        DBTracer,
        tbContinueEducationType
    }

    public enum SqlAction
    {
        Save,
        Insert,
        Update,
        Upsert,
        Delete,
        Fetch,
        FetchAll,
        Clear,
        Notify,
        FetchForSearch,
        FetchForGroupName,
        FetchAllForGroupName,
        FetchGroups,
        FetchForObligation_pomid,
        FetchForCompany,
        FetchStatusForCompany,
        FetchForProduct,
        FetchCompany,
        FetchForAgent,
        AgentApproval,
        RejectApproval,
        FetchAllCompany,
        FetchForSite,
        CloneSmtpFromSite,
        FetchForAdvertisment,
        FetchForCode,
        FetchForRequirement,
        FetchForCatagory,
        FetchActiveFAQForSite,
        FetchActiveForSite,
        CloneFAQFromSite,
        FetchForLogin,
        FetchonCountry,
        FetchForLoginEmailAddress,
        FetchForAgentAndCompany,
        FetchForAgentRequirement,
        DeactivateForSiteAndRoleType,
        FetchForSystemUser,
        FetchForPageMapping,
        FetchForDate,
        FetchForEventType,
        FetchForParentProductCategory,
        FetchForReport,
        FetchForSecurityProfile,
        FetchForPageSecurity,
        FetchForAccountingCompany,
        FetchForAccountingOrderType,
        FetchForNoticeMethod,
        FetchForAgency,
        FetchForSiteMessage,
        FetchForSupervisor,
        FetchForSiteUser,
        FetchForSiteRoleType,
        FetchForState,
        FetchForZipCode,
        FetchForSession,
        FetchForAgentAndProduct,
        FetchForApplicationControlSecurity,
        FetchForBaseURL,
        RequirementCompleted,
        FetchForEmailAddress,
        FetchForUnusedMaster,
        Clone,
        FetchForImageFileName,
        FetchForSystemUserSite,
        DeleteForSite,
        FetchForTaxCategory,
        FetchForStateTaxRate,
        DeleteForAgent,
        UpdateStatus,
        FetchForRequired,
        PrepDefault,
        FetchForAgentRenew,
        RegistrationNotify,
        UpdateAgentInfo,
        UpdateAddress,
        UpdateSummary,
        FetchForAgentPDF,
        ImageUpload,
        FetchForPassword,
        FetchForLoginAsst,
        FetchForPage,
        FetchForAgentCourses,
        FetchUserID,
        FetchForName,
        FetchForAdvancedSearch,
        AdvanceSearch,
        FetchForAgentSearch,
        FetchForSearchAdvanced,
        FetchForLicenceSearch,
        FetchForAdvancedAgentSearch,
        PaggedFetchAll,
        UpdateImage,
        FetchforSystemUser,
        UpdateOnSystemUser,
        NotificationMail,
        FetchAgentLicenceStatus,
        SimpleSearch,
        AdvancedSearch,
        FetchForAgentCoursespage,
        prEmailQueuefetchbyEmail,
        fetchbyemailId,
        NotificationDocument,
        FetchByAgentId,
        FetchForCountry,
        FetchAllStatusPagged,
        FetchStatusByAgentPagged,
        AllReadyExits,
        FetchForBroker,
        FetchAllPaging,
        FetchAllForAssign,
        InsertAssignedData,
        FetchByBrokerIdPaging,
        FetchByBrokerIdNotAssigned,
        DeleteAGentBroker,
        FetchByAgntIdAdvanceSearch,
        FetchByBrokerIdAdvanceSearch,
        BrokerFetchByAgentIddNotAssigned,
        InsertAssignedDataByAgent,
        NameSearch,
        InsertBrokerAgent,
        CheckBrokerAgent,
        UpdateBrokerAgent,
        FetchLicenceStatus,
        FetchLicenceStatusNPN,
        FetchAllExpiredStatusPagged,
        FetchExpiredStatusByAgentPagged,
        fetchNotificationReminder,
        NotificationReminder,
        notificationreminder,
        NotificationReminderCount,
        FetchEmailById,
        FetchByEmail,
        FetchCodeForEmailAddress,
        FetchESignatureForDocument,
        FetchByEnvId,
        FetchCompleted,
        FetchSent,
        FetchForDocuSign,
        UpdateByEnvId,
        FetchonJurisdiction,
        FetchAllOrganisations,
        FetchForBusinessTypeId,
        InsertFor,
        UpdateFor,
        FetchForProductId,
        FetchByCompanyIdPaging,
        FetchByCompanyIdNotAssigned,
        DeleteAGentCompany,
        UpdateCompanyAgent,
        InsertCompanyAgent,
        CheckCompanyAgent,
        FetchForAgentCountry,
        FetchByCompanyIdAdvanceSearch,
        FetchByAgentIdAdvanceSearch,
        FetchForAgentId,
        FetchForAgentLicence,
        Check,
        CheckProductCode,
        InsertCheck,
        SystemUserDelete,
        ActiveFetchForCompany,
        UpdateIsActive,
        UpdateAgentBroker,
        InsertAgentBroker,
        CheckAgentBroker,
        InsertAgencyLicence,
        FetchForAgencyCoursespage,
        UpdateIsValidUrlTrue,
        UpdateIsValidUrlFalse,
        FetchForJurisdiction,
        FetchForAgentLicenceEdit,
        FetchForEdit,
        DeleteForAgency,
        FetchForLicenceType,
        DeleteForLicenceType,
        DeleteForProductLicenceType,
        FetchByAgentFormId,
        FetchByCompanyId,
        FetchByUrlAndKey,
        Export,
        FetchParent,
        IsExport,
        Import,
        QwikExport,
        FetchProcedures,
        FetchProcedureParameters,
        ExecuteProcedure,
        FetchForDataFeed,
        FetchByCompanyIdPrincipal,
        EncryptData,
        FetchForPaperWork,
        UpdatePaperWorkOn,
        FetchByUrl,
        FetchForExportToExcel,
        FetchWithCompanyLicences,
        FetchCompanyAgentLicence,
        FetchCompanyAgentLicenceForEdit,
        CheckForCode,
        FetchCompanyAgencyLicence,
        CheckCompanyAgency,
        FetchForAgencyLicence,
        FetchForAgentAgencyLicenseType,
        UpdateAgentLicense,
        FetchAllExpiredStatus,
        FetchAllStatus,
        FetchForSiteURL,
        FetchCompanyAppoitmentFlag,
        FetchDetails,
        AccLaimToDISIntegration,
        FetchAppointmentsForExport,
        FetchLicensesForExport,
        FetchForAllPagged,
        FetchAllAssociatedAgents,
        FetchForAll,
        UpdateAgencyLicenseinQC,
        UpdateAgentLicenseinQC,
        QwikCoverageToAcclaimDataSync,
        FetchAllExpiredAndExpiringDocuments,
        FetchForDateRange,
        FetchHTMLForError,
        FetchLogReportForDateRange,
        PrePasswordChange,
        FetchWithoutId,
        CanChangePassword,
        IsRecentPasswordReused,
        FetchPasswordLimit,
        FetchAccountLockoutDuration,
        FetchAllowChange,
        CUserSecurityFetchForUserId,
        GetApiRunFlag,
        XmlParsingForNiprAPI,
        FetchNIPRNumbers,
        InsertNIPRLog,
        FetchForId,
        FetchForText ,
        FetchForNPNNumber,
        FetchForDashboard,
        FetchStatisticsDataForDashboard,
        FetchAgentsForDashboard,
        FetchNIPRStatisticsDataForDashboard,
        FetchForType,
        FetchAllItems,
        ValidateEmail,
        CheckForDuplicateCode,
        FetchForAutoSearch,
        FetchEOQuestions,
        FetchChildAgencies,
        UpdateChildRecord,
        FetchExpiringLicences,
        FetchCollapsed,
        FetchSortOrder,
        FetchForControlId,
        FetchAgentsReport,
        FetchForAgentDetails,
        AgentUpdate,
        AgentInsert, 
        BrokerQCIntegrationXml,
        BrokerLicenses,
        AgentLicenses,
        AgentFetchList,   
        BrokerFetchList, 
        BrokerFetchForTaxId,    
        AgentFetchForNPN,
        FetchForJurisdictionCode,
        BulkImport,
        FetchForLastNameAndNIPRNumbers,
        FetchByName,
        FetchPending,
        FetchXmlForDisIntegration,
        ScriptTesting,
        FetchForUpdate,
        UpdateAgentCode,
        FetchForProgressIndicator,
        FetchBrokerIDForAgentID,
        FetchForPendingAppointed,
        FetchForPendingAppointedForCompany,
        SetOfBrokerAgents,
        GetBrokerForAgent,
        AgentBrokerForLicenseID,
        InsertLog,
        AgentFetchForNPNForDelete,
        InsertLicenceFromXML
    }


    public interface IDataLayer
    {
        void Execute(DataLayerMessage aMessage);
        string SqlActionX(SqlAction aSqlAction);

        SqlEntity SqlEntity { get; }
        string SqlEntityX { get; }
        string ShortSqlEntityX { get; }
    }

}